// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FSEM
Eigen::VectorXd FSEM(int group_num, double prior_wight, double C, Eigen::MatrixXd w_reduce, Eigen::MatrixXd w0_reduce, Eigen::VectorXd x_reduce, Eigen::VectorXi x_reduce_int, Eigen::VectorXd reduce_num, Eigen::VectorXd theta_old, int k_step, int newtown_step, int cut_max);
RcppExport SEXP _FS4Clustering_FSEM(SEXP group_numSEXP, SEXP prior_wightSEXP, SEXP CSEXP, SEXP w_reduceSEXP, SEXP w0_reduceSEXP, SEXP x_reduceSEXP, SEXP x_reduce_intSEXP, SEXP reduce_numSEXP, SEXP theta_oldSEXP, SEXP k_stepSEXP, SEXP newtown_stepSEXP, SEXP cut_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type group_num(group_numSEXP);
    Rcpp::traits::input_parameter< double >::type prior_wight(prior_wightSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type w_reduce(w_reduceSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type w0_reduce(w0_reduceSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type x_reduce(x_reduceSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type x_reduce_int(x_reduce_intSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type reduce_num(reduce_numSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta_old(theta_oldSEXP);
    Rcpp::traits::input_parameter< int >::type k_step(k_stepSEXP);
    Rcpp::traits::input_parameter< int >::type newtown_step(newtown_stepSEXP);
    Rcpp::traits::input_parameter< int >::type cut_max(cut_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(FSEM(group_num, prior_wight, C, w_reduce, w0_reduce, x_reduce, x_reduce_int, reduce_num, theta_old, k_step, newtown_step, cut_max));
    return rcpp_result_gen;
END_RCPP
}
// compute_pl
double compute_pl(Eigen::VectorXd theta, Eigen::VectorXi x, Eigen::VectorXd reduce_num, Eigen::VectorXd alpha, int group_num, double C);
RcppExport SEXP _FS4Clustering_compute_pl(SEXP thetaSEXP, SEXP xSEXP, SEXP reduce_numSEXP, SEXP alphaSEXP, SEXP group_numSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type x(xSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type reduce_num(reduce_numSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type group_num(group_numSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_pl(theta, x, reduce_num, alpha, group_num, C));
    return rcpp_result_gen;
END_RCPP
}
// homo_opt
Eigen::VectorXd homo_opt(Eigen::VectorXd w_reduce, Eigen::VectorXd x_reduce, Eigen::VectorXd reduce_num, int newtown_step, double th, double r);
RcppExport SEXP _FS4Clustering_homo_opt(SEXP w_reduceSEXP, SEXP x_reduceSEXP, SEXP reduce_numSEXP, SEXP newtown_stepSEXP, SEXP thSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type w_reduce(w_reduceSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type x_reduce(x_reduceSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type reduce_num(reduce_numSEXP);
    Rcpp::traits::input_parameter< int >::type newtown_step(newtown_stepSEXP);
    Rcpp::traits::input_parameter< double >::type th(thSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(homo_opt(w_reduce, x_reduce, reduce_num, newtown_step, th, r));
    return rcpp_result_gen;
END_RCPP
}
// reduce_w
Eigen::VectorXd reduce_w(Eigen::VectorXd w, Eigen::VectorXd reduce_num);
RcppExport SEXP _FS4Clustering_reduce_w(SEXP wSEXP, SEXP reduce_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type w(wSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type reduce_num(reduce_numSEXP);
    rcpp_result_gen = Rcpp::wrap(reduce_w(w, reduce_num));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FS4Clustering_FSEM", (DL_FUNC) &_FS4Clustering_FSEM, 12},
    {"_FS4Clustering_compute_pl", (DL_FUNC) &_FS4Clustering_compute_pl, 6},
    {"_FS4Clustering_homo_opt", (DL_FUNC) &_FS4Clustering_homo_opt, 6},
    {"_FS4Clustering_reduce_w", (DL_FUNC) &_FS4Clustering_reduce_w, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_FS4Clustering(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
